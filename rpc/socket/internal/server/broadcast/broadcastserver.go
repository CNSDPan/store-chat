// Code generated by goctl. DO NOT EDIT.
// Source: socket.proto

package server

import (
	"context"

	"store-chat/rpc/socket/internal/logic/broadcast"
	"store-chat/rpc/socket/internal/svc"
	"store-chat/rpc/socket/pb/socket"
)

type BroadcastServer struct {
	svcCtx *svc.ServiceContext
	socket.UnimplementedBroadcastServer
}

func NewBroadcastServer(svcCtx *svc.ServiceContext) *BroadcastServer {
	return &BroadcastServer{
		svcCtx: svcCtx,
	}
}

func (s *BroadcastServer) BroadcastLogin(ctx context.Context, in *socket.ReqBroadcastMsg) (*socket.Result, error) {
	l := broadcastlogic.NewBroadcastLoginLogic(ctx, s.svcCtx)
	return l.BroadcastLogin(in)
}

func (s *BroadcastServer) BroadcastNormal(ctx context.Context, in *socket.ReqBroadcastMsg) (*socket.Result, error) {
	l := broadcastlogic.NewBroadcastNormalLogic(ctx, s.svcCtx)
	return l.BroadcastNormal(in)
}

func (s *BroadcastServer) BroadcastOut(ctx context.Context, in *socket.ReqBroadcastMsg) (*socket.Result, error) {
	l := broadcastlogic.NewBroadcastOutLogic(ctx, s.svcCtx)
	return l.BroadcastOut(in)
}
