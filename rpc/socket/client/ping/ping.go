// Code generated by goctl. DO NOT EDIT.
// Source: socket.proto

package ping

import (
	"context"

	"store-chat/rpc/socket/pb/socket"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	BodyEvent         = socket.BodyEvent
	EventDataLogin    = socket.EventDataLogin
	EventDataNormal   = socket.EventDataNormal
	EventParamsLogin  = socket.EventParamsLogin
	EventParamsNormal = socket.EventParamsNormal
	ReqBroadcastMsg   = socket.ReqBroadcastMsg
	ReqPing           = socket.ReqPing
	ResPing           = socket.ResPing
	Result            = socket.Result

	Ping interface {
		Ping(ctx context.Context, in *ReqPing, opts ...grpc.CallOption) (*ResPing, error)
	}

	defaultPing struct {
		cli zrpc.Client
	}
)

func NewPing(cli zrpc.Client) Ping {
	return &defaultPing{
		cli: cli,
	}
}

func (m *defaultPing) Ping(ctx context.Context, in *ReqPing, opts ...grpc.CallOption) (*ResPing, error) {
	client := socket.NewPingClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}
